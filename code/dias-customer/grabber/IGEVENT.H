//---------------------------------------------------------------------------
/*
    Changes:
        Version 3.5:
          uf/29.1.99: first implemenation

*/

#ifndef IGEventH
#define IGEventH

#include <windows.h>


#ifndef _IFKT
#define _IFKT __stdcall
#endif

typedef enum  {
// signals generated by hardware ( interrupts )
  GE_StartOfField  = 0,    // Signal on each vsync
  GE_StartTrigger  ,       // Signal on TriggerFF high at StartOfField
  GE_SnapFinished  ,       // Signal on finished Snap checked on StartOfField
  GE_TriggerSnapFinished , // Signal on finished Snap with trigger
  GE_StartOfOdd     ,      // Signal on each start of odd field
  GE_StartOfEven    ,      // Signal on each start of even field
// signals generated by preprocessed software
  GE_NewImageAcquired,     // Image is acquired
  GE_NewImageReady,        // Image is process and ready for display
  GE_MaxTypes
} TGrabEvent;

class IGrabEvent
{
public:
    virtual HANDLE _IFKT Handle() = 0;             // returns handle of hEvent
    virtual TGrabEvent _IFKT GetEventType() = 0;   // returns the event type
    
    virtual BOOL _IFKT SetAll() = 0;               // signals all event's of the same type
    virtual BOOL _IFKT ResetAll() = 0;             // reset's all event's of the same type

    virtual BOOL _IFKT Set() = 0;                  // signals only this event
    virtual BOOL _IFKT Reset() = 0;                // reset's this event
    virtual DWORD _IFKT WaitFor( DWORD dwMilliseconds ) = 0;  // wait for this event is signaled

};



#ifndef GRABBER_DLL
#define _GRABBER_IMPEXP  __declspec(dllimport)
#else /* only for building the DLL */
#define _GRABBER_IMPEXP  __declspec(dllexport)
#endif


//---------------------------------------------------------------------------
#endif  // IGEventH

