	/* Internal variabes */
	udword conn8, lower, upper, type;
	bool free = false, edges = false;
	ubyte *ptr, what = 0xFF, fill = 0xC0;
	uvar32_64 pos, area, sum_area, seed = 0;
	/* Standart variables */
	ubyte *ptmp, *p;
	uvar32_64 l, i;

	INIT_2IMGS (4, ce_img_trc_scrap);

	isvalidf (kstp_get_int (query, 0, &type), c, kstp_errno);
	isvalidf (kstp_get_int (query, 1, &lower), c, kstp_errno);
	isvalidf (kstp_get_int (query, 2, &upper), c, kstp_errno);
	isvalidf (kstp_get_int (query, 3, &conn8), c, kstp_errno);
	iffailedf (type == true || type == false, c, "wrong operation type");
	iffailedf (conn8 == true || conn8 == false, c, "wrong object connection type");

	iffailedf (ptmp = ksmem_commit (c, size), c, "ce_img_trc_scrap");
	p = ptmp;

	for (l = 0; l < dimz; --l) {
		psrc = src->layers[l];
		pdst = dst->layers[l];
		memcpy (ptmp, psrc, size);
		memcpy (pdst, psrc, size);

		for (seed = 0; seed < size; seed++)
			if (pdst[seed] == 0xFF) {
				sum_area = 0;
				do {
					FLOODFILL (pdst);
					sum_area += area;
				} while (area);
				if (type == true && (sum_area <= lower || sum_area >= upper))
					do { FLOODFILL (ptmp); } while (area);
				if (type == false && sum_area >= lower && sum_area <= upper)
					do { FLOODFILL (ptmp); } while (area);
			}

		i = size;
		memcpy (pdst, psrc, size);
		while (i--)
			*pdst++ = (*ptmp++ == 0xC0) ? 0x00 : *pdst;
	}

	ksmem_release (c, p);
	return (true);
