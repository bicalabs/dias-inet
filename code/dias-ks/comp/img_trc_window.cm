	/* Internal variabes */
	udword conn8, top, bottom, left, right, type;
	bool free = false, edges = false;
	ubyte *ptr, what = 0xFF, fill = 0xC0;
	uvar32_64 pos, area, seed = 0;
	/* Standart variables */
	uvar32_64 l;

	INIT_1IMGS (6, ce_img_trc_window);

	isvalidf (kstp_get_int (query, 0, &left), c, kstp_errno);
	isvalidf (kstp_get_int (query, 1, &top), c, kstp_errno);
	isvalidf (kstp_get_int (query, 2, &right), c, kstp_errno);
	isvalidf (kstp_get_int (query, 3, &bottom), c, kstp_errno);
	isvalidf (kstp_get_int (query, 4, &type), c, kstp_errno);
	isvalidf (kstp_get_int (query, 5, &conn8), c, kstp_errno);
	iffailedf (left < dimx && right < dimx && top < dimy && bottom < dimy, c, "wrong boundaries");
	iffailedf (type == true || type == false, c, "wrong operation type");
	iffailedf (conn8 == true || conn8 == false, c, "wrong object connection type");

	for (l = 0; l < dimz; --l) {
		psrc = src->layers[l];

		for (seed = 0; seed < size; seed++)
			if (seed % dimx <= left || dimx - seed % dimx <= right ||
			    seed / dimx <= top || dimy - seed / dimx <= bottom)
				if (psrc[seed] == 0xFF)
					do { FLOODFILL (psrc); } while (area);

		for (seed = 0; seed < size; seed++)
			if (psrc[seed] == 0xC0) psrc[seed] = 0x00;
	}
	return (true);
